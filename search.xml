<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[2018React-Native环境安装及运行第一个demo]]></title>
      <url>/2018/01/07/2018React-Native%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Android放下很久了，前段时间一直扎根于前端三大件（HTML、CSS、JavaScript）的学习，目的呢是想为之后的学习React Native学习做好准备。趁着离考试还有一段时间，也是重新走上Android开发的道路。<br>现在确实是移动设备占优，现在智能手机能够完成网页端很多的工作。大有一统江山的趋势。移动开发在未来的很长时间里面都是热门。<br>工欲善其事必先利其器，本文主要是结合自己的相关经验搭建开发环境，来开始关于React Native的第一篇博文。纵观网上的各种教程，还有官方的一些教程吧，写的是比较简略的，所以本文的定位是写一点比较详细的环境安装教程。  </p>
<h1 id="关于react-native"><a href="#关于react-native" class="headerlink" title="关于react native"></a>关于react native</h1><p>还是老规矩，介绍下这个东东吧。  </p>
<blockquote>
<p>React Native 是一个 JavaScript 的框架，用来撰写实时的、可原生呈现 iOS 和 Android 的应用。其是基于 React的，而 React 是 Facebook 的用于构建用户界面的 JavaScript 库，但是这里不是给浏览器解释的，而是为移动平台。换句话说：如果你是一名 web 开发者，你可以使用熟悉的框架和单一的 JavaScript 代码库，即 React Native来撰写清晰的、高效的移动应用。</p>
<p>相比较于 iOS 和 Android 原生的开发，React Native 提供更好的开发者体验。因为你的程序大多数都是 JavaScript，你可以从 web 开发中汲取大量的经验，比如能够立即“刷新”你的应用来查看你代码的修改。相比于在传统的应用开发中花很长的时间去等待构建的过程，会让人感觉这简直是天赐之物。</p>
<p>另外，React Native 还为开发者提供了智能的错误报告和标准的 JavaSript 调试工具，这些让移动开发更加的顺手。  </p>
</blockquote>
<p>确实现在的开发，RN在后面的很长时间是主流。毕竟原生开发存在着诸多问题，最大的问题是在用户体验上。废话不多说，进入正题。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装过程可以参考<a href="https://reactnative.cn/docs/0.51/getting-started.html" target="_blank" rel="noopener">React Native中文网</a><br>那你以为这样就完了吗？没有。</p>
<p>官方文档上面说了，必须安装的东西，其实有些东西是没有必要的，比如Chocolatey这个包管理器，下载速度及其慢，完了还不支持断点续传，网络一有波动就GG。</p>
<p>所以遇到按照官方的步骤配置的遇到错误的，到我这里来就对了。  </p>
<h2 id="Node-js以及Python安装"><a href="#Node-js以及Python安装" class="headerlink" title="Node.js以及Python安装"></a>Node.js以及Python安装</h2><p>这里需要用到的两个软件分别是Python2和Node.js（其中Python必须安装2.x.x版本，Node.js随便安装都无所谓）。</p>
<p>我们采用安装包的方式安装这两个软件，下载地址为：  </p>
<ul>
<li>Python：<a href="https://www.python.org/downloads/release/python-2714/" target="_blank" rel="noopener">Python2.7.14</a>  </li>
<li>Node.js:<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js 8.9.4LTS</a></li>
</ul>
<p>安装过程一路默认就行，但是要注意，需要把Python的根目录添加到环境变量。C:\Python27  </p>
<p>其次，Node.js也是需要将其根目录配置到环境变量的。  </p>
<p>具体流程就不详细介绍了，如果有问题请询度娘。</p>
<h2 id="Yarn、React-Native安装"><a href="#Yarn、React-Native安装" class="headerlink" title="Yarn、React Native安装"></a>Yarn、React Native安装</h2><p>Yarn是Facebook提供的替代npm的工具，可以加速node模块的下载。React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。</p>
<pre><code>npm install -g yarn react-native-cli
</code></pre><p>安装完yarn设置镜像源：</p>
<pre><code>yarn config set registry https://registry.npm.taobao.org --global
yarn config set disturl https://npm.taobao.org/dist --global    
</code></pre><p>PS：这里不设置也是可以的，亲测没有什么差别。  </p>
<h2 id="Android-Studio安装"><a href="#Android-Studio安装" class="headerlink" title="Android Studio安装"></a>Android Studio安装</h2><p>React Native是支持3.x版本的。所以博主是用的3.1的版本，这个版本的Android虚拟机做了些优化，无论是启动速度还是性能各个方面都很优秀。另外3.x出来快大半年了，还停留在2.3版本的朋友可以考虑给手中的AS升级了。   </p>
<p>关于Android Studio的安装我就不详细介绍了，官方教程写的还是很详细的，另外官方教程的安装步骤2.3和3.1的没有差别。</p>
<p>PS：这里再说一下，Java JDK不支持9.0版本的，我之前用的就是9.0版本，发现不兼容，果断换回了8.0.  </p>
<p>这里直接简述下安装过程，相信AS这种级别的软件安装不是很难吧。</p>
<p>下载地址：<a href="http://www.android-studio.org/" target="_blank" rel="noopener">Android Studio中文社区</a>  </p>
<ul>
<li>安装软件的步骤是一路Next就行，没有坑  </li>
<li>安装完成后打开AS，然后这里会下载一些组件，请保持网络连接。  </li>
<li>确保 Android SDK和Android Device Emulator选中  </li>
<li>打开软件后选择custom选项，接下来会叫你选择主题什么的，你开心就好  </li>
<li>这里SDK Components Setup 里面的东西全部选中，当然你要更改SDK的路径也是可以的  </li>
<li>安装完成后，在Android Studio的欢迎界面中选择Configure | SDK Manager。</li>
<li>在SDK Platforms窗口中，选择Show Package Details，然后在Android 6.0 (Marshmallow)中勾选Google APIs、Android SDK Platform 23、Intel x86 Atom System Image、Intel x86 Atom_64 System Image以及Google APIs Intel x86 Atom_64 System Image。 </li>
<li>在SDK Tools窗口中，选择Show Package Details，然后在Android SDK Build Tools中勾选Android SDK Build-Tools 23.0.1（必须包含有这个版本。当然如果其他插件需要其他版本，你可以同时安装其他多个版本）。然后还要勾选最底部的Android Support Repository.</li>
<li>将SDK的目录加到环境变量，单独配置Android SDK的tools和platform-tools目录添加到PATH变量中。 </li>
</ul>
<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>这个安不安装在现阶段是无所谓的，但是作为一个程序员，不用Git感觉就像村里没通电一样。  </p>
<h2 id="配置Android-Device-Emulator"><a href="#配置Android-Device-Emulator" class="headerlink" title="配置Android Device Emulator"></a>配置Android Device Emulator</h2><p>用过AS的可以跨过这一步。  </p>
<p>打开Android virture Devices Manager，然后新建就行了。</p>
<p><img src="https://i.imgur.com/7qNNXPo.png" alt=""><br><img src="https://i.imgur.com/NIRq9qi.png" alt=""><br><img src="https://i.imgur.com/5mIuNq2.png" alt=""></p>
<p>OK，到现在基本上环境是安装好了。接下来弄一个小小的demo测试下。  </p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在你合适的位置新建一个文件夹用来放置RN的文件。 在此处发开PowerShell（Shift+鼠标右键，选择PowerShell）。输入命令：  </p>
<pre><code>react-native init 你的项目名  
</code></pre><p><img src="https://i.imgur.com/LYH1nxn.png" alt=""></p>
<p>PS：这个下载过程有点长，我用的最短时间是0.25分钟，最长5分钟。  </p>
<p>接下来在cd进入你的项目，输入以下命令：（在此之前，需要打开模拟器）</p>
<pre><code>react-native run-android 
</code></pre><p>此时会弹出Node的命令行界面：</p>
<p><img src="https://i.imgur.com/IhR1EFS.png" alt="">  </p>
<p>稍等一会就会出现以下界面：   </p>
<p><img src="https://i.imgur.com/mcqwAJ6.png" alt="">  </p>
<p>代表安装成功。  </p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>只是简单的简述了下我的配置RN的过程，路漫漫其修远兮。后面我会继续学习RN，同时还需要准备下算法学习备战蓝桥杯个人赛。记录下我的安装步骤，在安装的过程中也是需要耐心的，官方教程也不是万能宝典，还是要辩证的来看吧，使用包管理器确实下载很不方便，而且出了问题也不知道出在哪里，还是安装包直接点。如果在安装过程中有不懂的地方，欢迎留言评论。</p>
]]></content>
      
        <categories>
            
            <category> react-native学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react-native </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo内嵌html或者Js代码遇到的问题]]></title>
      <url>/2018/01/05/Hexo%E5%86%85%E5%B5%8Chtml%E6%88%96%E8%80%85Js%E4%BB%A3%E7%A0%81%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://i.imgur.com/3Ewq7e1.gif" alt=""><br>在没有遇到这个坑之前我是完全不知道原来markdown里面是可以嵌入html或者js代码运行的。好吧是我孤陋寡闻了。在了解了原来还有这种操作的时候，整个人是惊呆了。<img src="https://i.imgur.com/DxDVkwv.gif" alt="">，但想想也是，不然一个博客里面随随便便冒出一个<code>button</code>还能点击是怎么做出来的。  </p>
<h1 id="进坑过程"><a href="#进坑过程" class="headerlink" title="进坑过程"></a>进坑过程</h1><p><code>&lt;script type=&quot;text/javascript&quot;  alert(&quot;hello world！&quot;);&gt;</code></p>
<p>比如上面一段代码，写出来了，在<code>markdownpad</code>上面还是可以看到的，但是在<code>hexo</code>中就看不到了。此时脸上笑嘻嘻，心里<em>*</em>。（以上代码我是直接用``括起来的，如果没有扩起来的话，博文后面的内容是完全看不到的。）也是很奇怪这个东西，好像是因为hexo把MD文档全部按照它自己的语法编译了一次，这样就导致编译看起来效果不错，发布出去到处是坑。</p>
<p>昨晚上我写了一篇博文，<code>hexo g</code>的时候就宝一大堆错，我尝试在其报错的位置进行解决，但是左看右看确实没错。原来是因为hexo文档中的有js代码，引起了连锁反应。毕竟hexo到现在虽然很不错了，但是还有些问题。  </p>
<h1 id="脱坑过程"><a href="#脱坑过程" class="headerlink" title="脱坑过程"></a>脱坑过程</h1><p>遇事不决用谷歌，带着问题翻墙出去。结果发现没有人遇到和我一样的问题。难受。各个大佬群咨询，大佬们给出的建议都尝试了，还是没有办法。</p>
<p>卸载重装，我就差换电脑了，哈哈哈。 </p>
<p>好了，说下脱坑方法，在你的JS或者HTML代码前面加上4个空格，编译完美通过。</p>
<p>记录下我的经历，方便以后遇到同样问题的兄弟。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>遇到问题不要慌。能够解决问题的程序员才是好程序员。不断的写bug，不断解决bug才是开发的乐趣。hexo是可以内嵌前端代码的，注意不要被这个坑了，好了，现在弄得差不多了，后面准备回归我的老本行了，写Android了。  </p>
<p>最近新发现了一个markdown编辑器，还不错，如果不是因为不支持上传图片的话，我就转过去了。我也和开发的人聊了下，准备接入图床或者七牛云的接口。据说是hexo定制的，现在hexo的github主页就挂的这个编译器。有需要的可以去试试。  </p>
<p>附上链接地址：<a href="https://github.com/zhuzhuyule/HexoEditor" target="_blank" rel="noopener">HEXOEditor </a>  </p>
<p>好了就到这里，踩了很多坑，不一一列出来了，大家有问题的话可以留言评论！</p>
]]></content>
      
        <categories>
            
            <category> hexo个人博客搭建之路 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2018最新版Hexo博客Next主题6.0配置优化]]></title>
      <url>/2018/01/04/%E6%9C%80%E6%96%B0%E7%89%88Hexo%E5%8D%9A%E5%AE%A2Next%E4%B8%BB%E9%A2%986.0%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>或许是对默认的东西没有好感，总觉得默认的主题是很丑很丑的，完美控是接受不了这个东东的，还好hexo是可以修改主题的。这里首推NexT主题，<code>精于心，简于形</code>标语说的是真的不错。使用NexT主题的人比较多，这也说明这个主题确实很成熟了。优化，配置，扩展很多都集成了，比较简单。博文重质量，弄的太花哨确实没啥用。。。</p>
</blockquote>
<p>读者可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a>可以查看你喜欢的主题。 这里我主要说下NexT主题的相关配置。其他主题可以多看看官方文档。  </p>
<h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>安装的过程就一行代码，你需要在博客根目录出打开命令行输入以下命令：    </p>
<pre><code>git clone https://github.com/theme-next/hexo-theme-next themes / next
</code></pre><p>以上代码的意思是从 <a href="https://github.com/iissnan/hexo-theme-next将next下载到当前目录下的themes里面的next文件夹中。" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next将next下载到当前目录下的themes里面的next文件夹中。</a>  </p>
<h1 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h1><p>修改站点配置文件<code>_config.yml</code>  </p>
<pre><code># Extensions
## Plugins: https://hexo.io/plugins/
## Themes: https://hexo.io/themes/
theme: next
</code></pre><h1 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h1><p><img src="http://theme-next.iissnan.com/assets/img/NextSchemes3.png" alt=""></p>
<p>选择 Scheme  </p>
<p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p>
<ul>
<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>
<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>
<li>Pisces - 双栏 Scheme，小家碧玉似的清新  </li>
<li>Gemini - 左侧网站信息及目录，块+片段结构布局<br>cheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有四行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。 </li>
</ul>
<h1 id="设置-语言"><a href="#设置-语言" class="headerlink" title="设置 语言"></a>设置 语言</h1><p>编辑站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p>
<pre><code>language: zh-Hans  
</code></pre><p>PS：这里提一下，你使用<code>hexo s</code>预览的时候，你会发现是设置了语言之后界面还是英文，这个时候不要慌，使用<code>hexo clean</code>清理下database文件夹以及public文件夹就行了。然后再使用<code>hexo s</code> 预览。事实上，这个方法在遇到很多问题的时候都是通用的。</p>
<h1 id="设置-菜单"><a href="#设置-菜单" class="headerlink" title="设置 菜单"></a>设置 菜单</h1><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p>
<p>编辑 主题配置文件，修改以下内容：</p>
<p>设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，它将用于匹配图标以及翻译。  </p>
<h1 id="设置标签、分类的界面"><a href="#设置标签、分类的界面" class="headerlink" title="设置标签、分类的界面"></a>设置标签、分类的界面</h1><p>设置菜单那里，我设置了显示标签、分类、关于几个选项。如图：<br><img src="https://i.imgur.com/mAF33TE.png" alt="">  </p>
<p>但是点击进去，却报错：<code>Cannot GET /tags/</code>，不要慌，不能获取tags，创建一个就OK！  </p>
<p>这里介绍创建page的语法：   </p>
<pre><code>hexo new page &apos;name&apos; # name分别为tags、categories  
</code></pre><p>这样就创建了pages。<br>在控制台输入以下命令：  </p>
<pre><code>hexo new page &apos;tags&apos; #创建tags子目录
hexo new page &apos;categories&apos; #创建categories子目录
</code></pre><p>在你的网站根目录下面的source文件夹会分别生成tags、categories以及about文件夹。 </p>
<p>分别修改这tags和categories文件夹中的index.md文件，新增type属性，如下：</p>
<pre><code>---
title: tags
date: 2018-01-04 11:45:41
type: tags
---
</code></pre><p> categories的修改类似。   </p>
<p>当你新建一篇博文的时候，增加上tags和categories属性值，就能在tags和categories界面检索到你的文章了。   </p>
<h1 id="个性化定制"><a href="#个性化定制" class="headerlink" title="个性化定制"></a>个性化定制</h1><h2 id="添加fork-me-on-github"><a href="#添加fork-me-on-github" class="headerlink" title="添加fork me on github"></a>添加fork me on github</h2><p>在<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">http://tholman.com/github-corners/</a>或者<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">https://github.com/blog/273-github-ribbons</a>选择合适的样式复制代码到<code>themes/next/layout/_layout.swig</code>，在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面：<br><img src="https://i.imgur.com/QHwALhC.png" alt="">  </p>
<h2 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h2><p>实现效果之一：<br><img src="https://upload-images.jianshu.io/upload_images/5308475-ef603580be708882.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/466" alt=""><br>目前NexT主题最新的是V6.0版本，这个版本中可以有4种动态背景：  </p>
<ul>
<li>Canvas-nest  </li>
</ul>
<ul>
<li>three_waves  </li>
</ul>
<ul>
<li>canvas_lines  </li>
</ul>
<ul>
<li>canvas_sphere  </li>
</ul>
<p>设置方法也很简单，直接设置里需要的动态背景为<code>true</code>。</p>
<h2 id="点击出现桃心效果"><a href="#点击出现桃心效果" class="headerlink" title="点击出现桃心效果"></a>点击出现桃心效果</h2><p>浏览器输入：<a href="http://7u2ss1.com1.z0.glb.clouddn.com/love.js" target="_blank" rel="noopener">http://7u2ss1.com1.z0.glb.clouddn.com/love.js</a>  </p>
<p>拷贝所有代码，在<code>/themes/next/source/js/src</code>里面新建<code>love.js</code>，然后在<code>\themes\next\layout\_layout.swig</code>文件末尾添加以下代码：     </p>
<p><code>&lt;!-- 页面点击小红心 --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</code></p>
<h2 id="文章底部带-号的标签"><a href="#文章底部带-号的标签" class="headerlink" title="文章底部带#号的标签"></a>文章底部带#号的标签</h2><p><img src="https://i.imgur.com/FNMiJmQ.png" alt="">   </p>
<p>去掉文章后面的标签前面的#号。   </p>
<p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将<code>#</code>换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<h2 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h2><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：   </p>
<pre><code>&lt;div&gt;
{% if not is_index %}
        <div style="text-align:center;color: #ccc;font-size:14px;">-------------本文结束<i class="fa fa-paw"></i>感谢您的阅读-------------</div>
    {% endif %}
&lt;/div&gt;
</code></pre><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在post-body 之后， 添加以下代码：   </p>
<pre><code>&lt;div&gt;
{% if not is_index %}
    {% include 'passage-end-tag.swig' %}
  	{% endif %}
&lt;/div&gt;
</code></pre><p>添加位置如图：  </p>
<p><img src="https://i.imgur.com/NWZw9uo.png" alt="">  </p>
<p>然后打开主题配置文件（_config.yml),在末尾添加： </p>
<pre><code># 文章末尾添加“本文结束”标记
passage_end_tag:
  enabled: true
</code></pre><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p>
<h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p>实现效果：<br><img src="https://i.imgur.com/rwwMWVj.png" alt=""></p>
<p>打开主题配置文件_config.yml，搜索<code>social:</code>, <code>||</code>之后是在图标库中对应的图标。注意空格就行。  </p>
<p><img src="https://i.imgur.com/KXJGPqS.png" alt="">  </p>
<p>图标库链接：<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">http://fontawesome.io/icons/</a></p>
<h2 id="主页文章加阴影"><a href="#主页文章加阴影" class="headerlink" title="主页文章加阴影"></a>主页文章加阴影</h2><p>具体实现方法<br>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：</p>
<pre><code>// 主页文章添加阴影效果
 .post {
   margin-top: 60px;
   margin-bottom: 60px;
padding: 25px;
-webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);
-moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);
}
</code></pre><h2 id="添加热度"><a href="#添加热度" class="headerlink" title="添加热度"></a>添加热度</h2><p>具体实现方法<br>next主题集成<code>leanCloud</code>，打开<code>/themes/next/layout/_macro/post.swig</code></p>
<p>在<code>&lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</code>下添加一句：  </p>
<pre><code>&lt;span&gt;℃&lt;/span&gt;
</code></pre><p>然后打开，<code>/themes/next/languages/zh-Hans.yml</code>  </p>
<p>将<code>visitors: 阅读次数</code>改为<code>visitors: 热度</code></p>
<h2 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h2><p>默认的网站图标是一个N，当然是需要制定一个图了，在网上找到图后，将其放在<code>/themes/next/source/images</code>里面，然后在主题配置文件中修改下图所示图片位置</p>
<p><img src="https://i.imgur.com/sHd5kLC.png" alt="">  </p>
<p>还有一些就不详细说了，另外注意下好多的东西已经过时了。比如next主题已经换了域了。很多教程还停留在3.0时代，但是现在next的版本是V6.0，截止我这篇教程发布的时期。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这篇文章就只是简单的介绍了下NexT主题，关于这个主题呢，要达到个性化定制的话，还是需要再花点功夫的。还有就是这个<code>hexo s</code>预览效果确实不好，修改了网站内容之后，需要重新<code>hexo clean</code>再<code>hexo s</code>才能看到效果，有同样问题的兄dei就不需要担心自己的修改是错的。</p>
]]></content>
      
        <categories>
            
            <category> hexo个人博客搭建之路 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2018最新版hexo+Github搭建个人博客教程]]></title>
      <url>/2018/01/04/2018%E6%9C%80%E6%96%B0%E7%89%88hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>现在是大三了，身边的甚多朋友技术都还不错，动不动就搭建自己的网站什么的。本着向大佬学习（zhuangbi）的心情，我也开始在阿里云上面买了一个云服务器（学生套餐9.9），使用phpstudy软件一键部署了一个web服务器。但是想想其实没什么用，我只是想找一个属于自己的个人博客而已。所以将目光转向了hexo。 经过很多的摸索，终于是做好了我的博客：<a href="http://bianxiaofeng.top" target="_blank" rel="noopener">http://bianxiaofeng.top</a>, 就像每个语言入门必写<code>hello world</code>一样，我也想把自己使用hexo的相关经历写下来，方便自己以后查阅也希望能够帮助到更多的朋友。  </p>
</blockquote>
<p>博主使用是Windows10操作系统，其他系统自测。</p>
<h2 id="总述"><a href="#总述" class="headerlink" title="总述"></a>总述</h2><p>搭建的过程分为以下几步：  </p>
<ol>
<li>安装Node.js  </li>
</ol>
<ol>
<li>安装Git软件  </li>
</ol>
<ol>
<li>安装hexo博客框架  </li>
</ol>
<ol>
<li>测试本地运行（线下访问个人博客）  </li>
</ol>
<ol>
<li>部署到Coding以及GitHub上（线上访问个人博客）  </li>
</ol>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>Node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>    </p>
<p>安装过程一路默认安装即可。   </p>
<p>详细安装文档参看：<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">http://www.runoob.com/nodejs/nodejs-install-setup.html</a>  </p>
<h2 id="安装Git软件"><a href="#安装Git软件" class="headerlink" title="安装Git软件"></a>安装Git软件</h2><p>Git软件下载地址：<a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a>  </p>
<p>安装过程一路默认安装即可。 </p>
<p>关于更多的Git讲解参看：  </p>
<p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a>  </p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 </p>
<p>Hexo官方网站：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装命令：  </p>
<pre><code>npm install -g hexo-cli  #-g表示全局安装
</code></pre><p><em>这里提一下：关于hexo的终端操作最好是在管理员模式下，读者可以采用<code>按住Shift然后再点击鼠标右键</code>选择弹出菜单的<code>在此处打开Powershell窗口</code>保证运行在管理员状态下。</em>  </p>
<h3 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h3><p>在电脑合适的位置新建一个文件夹存放博客。本文中取名为<code>Blog</code>文件夹。  </p>
<p>控制台命令行使用cd命令进入到Blog文件夹，输入以下命令进行初始化：  </p>
<pre><code>hexo init  # 初始化 
</code></pre><p>初始化完成之后，因为会出现有些依赖包未安装成功的情况，所以请再输入以下命令安装依赖包:  </p>
<pre><code>hexo install   # 安装依赖包  
</code></pre><h2 id="测试本地运行"><a href="#测试本地运行" class="headerlink" title="测试本地运行"></a>测试本地运行</h2><p>完成以上安装步骤后，便可以在本地预览博客效果了。  </p>
<p>输入以下命令：  </p>
<pre><code>hexo g   # 等同于hexo generate，生成静态文件
hexo s   # 等同于hexo server，在本地服务器运行
</code></pre><p>然后打开浏览器地址栏输入：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>便可以预览生成的博客框架雏形了。  </p>
<h2 id="部署到GitHub以及Coding上"><a href="#部署到GitHub以及Coding上" class="headerlink" title="部署到GitHub以及Coding上"></a>部署到GitHub以及Coding上</h2><blockquote>
<p>建立博客网站肯定是要让大家看到的，由于Github是歪果仁的网站，且禁止百度爬虫访问，所以会导致百度搜不到你的网站。所以我们要做好两手准备：国内采用Coding托管，国外采用GitHub托管。  </p>
</blockquote>
<p>分别注册GitHub以及Coding的账号。  </p>
<ul>
<li><p>GitHub网址如下：<a href="http://www.github.com" target="_blank" rel="noopener">http://www.github.com</a>  </p>
</li>
<li><p>Coding网址如下：<a href="https://coding.net" target="_blank" rel="noopener">https://coding.net</a>  </p>
</li>
</ul>
<h3 id="GitHub注册"><a href="#GitHub注册" class="headerlink" title="GitHub注册"></a>GitHub注册</h3><p>1、在GitHub首页点击<code>Start Project</code>  </p>
<p>2、创建Repository </p>
<p><img src="https://i.imgur.com/HKup5ys.png" alt="">  </p>
<p>PS：创建时，填写<code>Repository name</code>的时候，Repository name的格式必须为{user_name}.github.io，其中{user_name}必须与你的用户名一样，这是GitHub Pages的特殊命名规范（亲测不区分大小写）。</p>
<h3 id="Coding注册"><a href="#Coding注册" class="headerlink" title="Coding注册"></a>Coding注册</h3><blockquote>
<p>CODING 是国内专业的一站式云端软件服务平台，成立于 2014 年 2 月，总部位于深圳，并于北京、上海、成都、西雅图设立分部，已获得了 IDG 和光速的两轮投资共计 1500 万美元。旗下自主研发运营 Coding.net 云端开发协作平台，累积 25 万开发者，37 万个项目。在云计算时代，把代码托管、产品演示、WebIDE 等开发工具集成到浏览器中，免除繁杂的开发环境部署，节省成本，帮助软件开发者提高生产效率，并实现 “Coding Anytime Anywhere” 的愿景。2015 年 10 月，基于 Coding.net 的工具平台，CODING 推出云端软件众包服务平台 “码市”，旨在通过云端协作以及众包的方式提高软件交付的效率，帮助软件开发行业实现高效的资源匹配。</p>
<p>Coding.net 为开发者提供了免费的基础服务，包括但不限于 Git 代码托管，项目管理，Pages 服务，代码质量管理。您可以在 Coding.net 一站完成代码及代码质量，项目及项目人员的管理，Coding.net 让开发变得前所未有的敏捷和简单。</p>
</blockquote>
<p>Coding的仓库容量只有256M，但是用来发布博文是够了的。  </p>
<p>注册步骤没啥好说的。  </p>
<p>主要说一下创建仓库的时候（顺便说一句：Coding毕竟还是国内的，各方面比较适合国人的习惯，操作起来是比GitHub顺手点。 ）  </p>
<p>点击下面的“加号”创建一个仓库：  </p>
<p><img src="https://i.imgur.com/vanCb7s.png" alt="">  </p>
<p>然后输入项目名称以及项目描述：  </p>
<p><img src="https://i.imgur.com/0ze8avx.png" alt=""><br><em>此处的项目名称不像GitHub那样有着严格的命名规范，你可以按照你能想象到的方式输入。建议不要输入中文，不然后面会走的很安详。这里我是输入的自己的用户名作为项目名称。</em>  </p>
<p>开启Pages服务（步骤如下图）  </p>
<p><img src="https://i.imgur.com/F4nGZCc.png" alt=""><br>选择部署来源为<code>master分支</code>，然后点击<a href="http://username.coding.me/yourRepoName" target="_blank" rel="noopener"> http://username.coding.me/yourRepoName</a>就可以查看你的博客了，不过你点进去是404，因为你仓库里面啥都没有。  </p>
<p>到此，注册和创建仓库一步骤已经全部完成了。  </p>
<h3 id="部署到线上（GitHub和Coding）"><a href="#部署到线上（GitHub和Coding）" class="headerlink" title="部署到线上（GitHub和Coding）"></a>部署到线上（GitHub和Coding）</h3><blockquote>
<p>我看到很多博客上面说到配置文件的时候，没有区分站点配置文件和主题配置文件，这里我先说清楚。站点配置文件和主题配置文件名称都是一样的<code>_config.yml</code>，站点配置文件在网站根目录，主题配置文件在根目录下的theme文件的具体theme下的<code>_config.yml</code>。  </p>
</blockquote>
<h4 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h4><p>打开<code>_config.yml</code>到最后<code>deploy</code>选项：<br>配置如下：  </p>
<pre><code># Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repo:
    github: https://github.com/DimpleFeng/dimplefeng.github.io.git,master
    coding: https://git.coding.net/DimpleFeng/test.git,master
</code></pre><p>注意：每个冒号后面都是有一个空格的，这是node的语法。  </p>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>部署之前需要安装<code>git</code>部署插件，否则会提示<code>Deployer not found</code>错误。  </p>
<pre><code>npm install hexo-deployer-git --save
</code></pre><p>安装完毕后控制台输入：  </p>
<pre><code>hexo g -d   
</code></pre><p>随后访问你的以下网址（注意替换）：</p>
<p><a href="yourName.github.io">yourName.github.io </a><br><a href="yourName.coding.me">yourName.coding.me </a>  </p>
<h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>接下来呢，我还会针对Next主题、相关的网站配置以及域名和百度谷歌收录进行说明，欢迎关注我的系列文章。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>洋洋洒洒的写了4000+字，确实每一步都是在仔仔细细的做，记录。这篇博文参考了hexo的官方文档，以及百度谷歌的各种教程，重复杂乱居多，网上各种文章都是复制粘贴重复很多且不是最新的，我只想用最平凡的文字记录最清晰的道路。我是一个被代码耽误的诗人，这是我朋友给我的评价哈哈哈。</p>
]]></content>
      
        <categories>
            
            <category> hexo个人博客搭建之路 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[站点被百度谷歌收录]]></title>
      <url>/2018/01/02/%E7%AB%99%E7%82%B9%E8%A2%AB%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%94%B6%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>精心写一篇博文但是没人看怎么办呢？百度搜不到，谷歌搜不到？别慌，还需要将你的网站提交到百度和谷歌。</p>
<p>在开始之前，你可以按照以下格式在百度和谷歌搜索下你的网站：<br><img src="https://i.imgur.com/5hnjkNo.png" alt=""></p>
<p><img src="https://i.imgur.com/yQ3UAjT.png" alt=""><br>注意：提交到谷歌需要科学上网。</p>
<h1 id="提交百度搜索引擎"><a href="#提交百度搜索引擎" class="headerlink" title="提交百度搜索引擎"></a>提交百度搜索引擎</h1><p>登录<a href="http://ziyuan.baidu.com/site/index" target="_blank" rel="noopener">http://ziyuan.baidu.com/site/index</a></p>
<p>ps：可能需要个人信息认证，按照提示认证即可！  </p>
<p><img src="https://i.imgur.com/YpUnA4O.png" alt=""></p>
<h2 id="点击添加站点"><a href="#点击添加站点" class="headerlink" title="点击添加站点"></a>点击添加站点</h2><p>会看到如下界面：<br><img src="https://i.imgur.com/zWlFN8G.png" alt="">  </p>
<h2 id="在图中文本框添加你的个人网站域名"><a href="#在图中文本框添加你的个人网站域名" class="headerlink" title="在图中文本框添加你的个人网站域名"></a>在图中文本框添加你的个人网站域名</h2><p>最好是带上<code>www</code></p>
<h2 id="设置站点领域"><a href="#设置站点领域" class="headerlink" title="设置站点领域"></a>设置站点领域</h2><p>这里我选择<code>信息技术</code>，点击下一步。 </p>
<h2 id="选择验证方式"><a href="#选择验证方式" class="headerlink" title="选择验证方式"></a>选择验证方式</h2><h3 id="验证方式一：文件验证"><a href="#验证方式一：文件验证" class="headerlink" title="验证方式一：文件验证"></a>验证方式一：文件验证</h3><p><img src="https://i.imgur.com/lj9qSFz.png" alt=""><br>  这里我选择的是文件验证，建议大家也使用文件验证方式，这样比较简单。 </p>
<blockquote>
<ol>
<li>请点击 下载验证文件 获取验证文件（当前最新：baidu_verify_Rkofa3ZBzc.html）</li>
</ol>
<ol>
<li>将验证文件放置于您所配置域名(www.bianxiaofeng.top)的根目录下</li>
</ol>
<ol>
<li>点击这里确认验证文件可以正常访问</li>
</ol>
<ol>
<li>请点击“完成验证”按钮</li>
</ol>
<p>为保持验证通过的状态,成功验证后请不要删除HTML文件   </p>
</blockquote>
<p>网站的根目录在那里呢？  </p>
<p>在你的博客的本地根目录的<code>Source</code>文件夹内。  </p>
<p><img src="https://i.imgur.com/NbWMPCi.png" alt=""><br> 然后控制台输入：<code>hexo g -d</code>，部署到网站上。</p>
<p>验证方式：<br>点击3步骤的验证。如果能点击进去证明成功。   </p>
<h2 id="随后点完成验证。"><a href="#随后点完成验证。" class="headerlink" title="随后点完成验证。"></a>随后点完成验证。</h2><h3 id="HTML标签验证"><a href="#HTML标签验证" class="headerlink" title="HTML标签验证"></a>HTML标签验证</h3><p>本文使用的是Next主题。在<code>themes/next/layout/_partials/head.swig</code>内：修改meta标签为站长网站上给出的标签即可：</p>
<p><img src="https://i.imgur.com/5BsCvZk.png" alt="">  </p>
<p>同时，在themes/next/_config.yml中将google-site-verification和baidu_site_verification的值设置为true即可。</p>
<p> 然后控制台输入：<code>hexo g -d</code>，部署到网站上。</p>
<h2 id="CNAME验证"><a href="#CNAME验证" class="headerlink" title="CNAME验证"></a>CNAME验证</h2><p><img src="https://i.imgur.com/IfCkGvN.png" alt="">  </p>
<p>配置方式如图：</p>
<p><img src="https://i.imgur.com/UeHI8VE.png" alt="">  </p>
<h1 id="谷歌验证"><a href="#谷歌验证" class="headerlink" title="谷歌验证"></a>谷歌验证</h1><p>登录<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="noopener">https://www.google.com/webmasters/tools/home?hl=zh-CN</a><br>如图：<br><img src="https://i.imgur.com/g9YE3s8.png" alt="">   </p>
<h2 id="在上图输入你的网站地址"><a href="#在上图输入你的网站地址" class="headerlink" title="在上图输入你的网站地址"></a>在上图输入你的网站地址</h2><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p><img src="https://i.imgur.com/XqmMJLv.png" alt=""></p>
<p>按照下图进行选择：</p>
<p><img src="https://i.imgur.com/BkGlDW2.png" alt="">  </p>
<p>在阿里云的解析当中添加下面的解析：<br><img src="https://i.imgur.com/LlISN8f.png" alt="">  </p>
<p>点击验证即可。  </p>
<p><img src="https://i.imgur.com/fLZQwgj.png" alt="">  </p>
<h1 id="站点地图"><a href="#站点地图" class="headerlink" title="站点地图"></a>站点地图</h1><blockquote>
<p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站。 </p>
</blockquote>
<h2 id="安装百度谷歌的站点地图文件"><a href="#安装百度谷歌的站点地图文件" class="headerlink" title="安装百度谷歌的站点地图文件"></a>安装百度谷歌的站点地图文件</h2><pre><code>npm install hexo-generator-sitemap --save

npm install hexo-generator-baidu-sitemap --save  
</code></pre><h2 id="修改博客配置文件"><a href="#修改博客配置文件" class="headerlink" title="修改博客配置文件"></a>修改博客配置文件</h2><p>打开站点配置文件：<br><img src="https://i.imgur.com/AcrthZy.png" alt="">  </p>
<p>主要是将url设置为你的站点名称。</p>
<p>然后执行：<code>hexo clean</code>和<code>hexo g</code>  </p>
<p>这样在你的网站根目录的<code>public</code>文件夹下生成sitemap.xml文件和baidusitemap.xml文件：  </p>
<p><img src="https://i.imgur.com/jqyyXOX.png" alt="">  </p>
<p>其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。  </p>
<h2 id="向谷歌提交链接"><a href="#向谷歌提交链接" class="headerlink" title="向谷歌提交链接"></a>向谷歌提交链接</h2><p>google站点平台：<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="noopener">https://www.google.com/webmasters/tools/home?hl=zh-CN</a>，然后就是注册账号、验证站点、提交sitemap，</p>
<p><img src="https://i.imgur.com/A5rvI8A.png" alt="">    </p>
<p><img src="https://i.imgur.com/UOvfbDi.png" alt="">  </p>
<p>提交你的site就行了</p>
<h2 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h2><p>百度收录很麻烦，效率比谷歌差远了。</p>
<h3 id="设置自动推送"><a href="#设置自动推送" class="headerlink" title="设置自动推送"></a>设置自动推送</h3><p>在主题配置文件下设置,将baidu_push设置为true：</p>
<pre><code># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO
baidu_push: true 
</code></pre><h3 id="sitemap"><a href="#sitemap" class="headerlink" title="sitemap"></a>sitemap</h3><p>将生成的baidusitemap.xml提交到百度<a href="http://ziyuan.baidu.com/linksubmit/index" target="_blank" rel="noopener">http://ziyuan.baidu.com/linksubmit/index</a></p>
<p>点击链接提交 ：</p>
<p><img src="https://i.imgur.com/sCONlMv.png" alt="">  </p>
<p>输入文件地址提交  </p>
<p><img src="https://i.imgur.com/M8JJBIe.png" alt=""></p>
<p>稍后你刷新页面，就可以看到状态了。</p>
<p>本文参考：<br><a href="http://blog.csdn.net/sunshine940326/article/details/70936988" target="_blank" rel="noopener">http://blog.csdn.net/sunshine940326/article/details/70936988</a></p>
]]></content>
      
        <categories>
            
            <category> hexo个人博客搭建之路 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博文置顶（自定义排序）]]></title>
      <url>/2018/01/01/Hexo%E5%8D%9A%E6%96%87%E7%BD%AE%E9%A1%B6/</url>
      <content type="html"><![CDATA[<blockquote>
<p>HEXO默认是按照时间顺序排一条线，然后按照时间顺序来决定显示的顺序的。按照网上的教程整理了一份方法。</p>
</blockquote>
<h1 id="Hexo博文置顶（自定义排序）"><a href="#Hexo博文置顶（自定义排序）" class="headerlink" title="Hexo博文置顶（自定义排序）"></a>Hexo博文置顶（自定义排序）</h1><p>使用的是<code>top</code>属性，<code>top</code>值越高，排序越在前，不设置<code>top</code>值得博文按照时间顺序排序。<br>修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js  </p>
<p>打开在最后添加如下<code>javascript</code>代码  </p>
<pre><code>posts.data = posts.data.sort(function(a, b) {
if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义
    if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排
    else return b.top - a.top; // 否则按照top值降序排
}
else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）
    return -1;
}
else if(!a.top &amp;&amp; b.top) {
    return 1;
}
else return b.date - a.date; // 都没定义按照文章日期降序排
</code></pre><p>}); </p>
<p>在写文章的时候添加top属性就行了。 </p>
<p>文章有多种属性，一个一个添加是不是很麻烦呢？  </p>
<p>这个时候可以修改：HEXO博客的<code>scaffolds\post.md</code>  </p>
<p>附上个人的<code>post</code>设置   </p>
<p><img src="https://i.imgur.com/QS4D72n.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> hexo个人博客搭建之路 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo]]></title>
      <url>/2018/01/01/hexo/</url>
      <content type="html"><![CDATA[<p>以下内容加密访问<br><a id="more"></a></p>
<p>进军hexo，留下足迹！</p>
]]></content>
      
        <categories>
            
            <category> 网站相关文件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 网站文件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MyEclipse2017 CI7 集成开发环境的破解与使用]]></title>
      <url>/2017/12/30/MyEclipse2017-CI7-%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E7%A0%B4%E8%A7%A3%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="MyEclipse2017-CI7-集成开发环境的破解与使用"><a href="#MyEclipse2017-CI7-集成开发环境的破解与使用" class="headerlink" title="MyEclipse2017 CI7  集成开发环境的破解与使用"></a>MyEclipse2017 CI7  集成开发环境的破解与使用</h1><blockquote>
<p>MyEclipse，是在eclipse 基础上加上自己的插件开发而成的功能强大的企业级集成开发环境，主要用于Java、Java EE以及移动应用的开发。MyEclipse的功能非常强大，支持也十分广泛，尤其是对各种开源产品的支持相当不错。<br>MyEclipse企业级工作平台（MyEclipseEnterprise Workbench ，简称MyEclipse）是对EclipseIDE的扩展，利用它我们可以在数据库和JavaEE的开发、发布以及应用程序服务器的整合方面极大的提高工作效率。它是功能丰富的JavaEE集成开发环境，包括了完备的编码、调试、测试和发布功能，完整支持HTML，Struts，JSP，CSS，Javascript，Spring，SQL，Hibernate  。<br>MyEclipse 是一个十分优秀的用于开发Java, J2EE的 Eclipse 插件集合，MyEclipse的功能非常强大，支持也十分广泛，尤其是对各种开源产品的支持十分不错。MyEclipse可以支持Java Servlet，AJAX，JSP，JSF，Struts，Spring，Hibernate，EJB3，JDBC数据库链接工具等多项功能。可以说MyEclipse是几乎囊括了目前所有主流开源产品的专属eclipse开发工具。—— <a href="https://baike.baidu.com/item/MyEclipse/783967?fr=aladdin" target="_blank"> [百度百科 ]</a></p>
</blockquote>
<p><em>本文主要通过本人自己的经验对网上的一些各类大神的教程进行总结与更新（大神们的教程已经发布很久了，不能适用现在的最新版本）。</em></p>
<p>备注：本教程默认读者是配置好了JAVA的相关环境的，请读者自行配置相关环境。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p>下载地址建议还是去官方的网站吧，为了安全。嘻嘻</p>
<pre><code>附上下载地址：http://www.myeclipsecn.com/download/
</code></pre><p>注：下载需要微信扫码获取密码。<br><img src="http://img.blog.csdn.net/20170907122010684?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注意我使用的版本为MyEclipse 2017 CI 7（2017-7-12更新），以后更新的版本有可能破解方法不能适用"><br>    注意我使用的版本为MyEclipse 2017 CI 7（2017-7-12更新）</p>
<p>下载默认安装即可。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p><strong><em>安装完毕之后，一定要记住，不要选择那个默认的打开MyEclipse ！！！</em></strong></p>
<p><img src="http://img.blog.csdn.net/20170907162256989?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>然后使用我们的破解工具：<br>        破解工具下载地址：<a href="http://download.csdn.net/download/qq_32454537/9968200" target="_blank" rel="noopener">http://download.csdn.net/download/qq_32454537/9968200</a></p>
<p>###1、解压文件后打开文件夹：<br>        <img src="http://img.blog.csdn.net/20170907122456966?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>###2、复制这里面的所有内容：<br><img src="http://img.blog.csdn.net/20170907122549774?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>###3、到MyEclipse的安装目录下：<br><img src="http://img.blog.csdn.net/20170907122656782?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>###4、复制到这个plugins文件夹内，覆盖就可。<br>ps：一共是64个文件。</p>
<p>###5、打开myeclipse2017_keygen这个文件夹<br><img src="http://img.blog.csdn.net/20170907122900501?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>###6、打开之后双击打开红框部分<br><img src="http://img.blog.csdn.net/20170907122934081?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>###7、打开后如图<br>填写UserCode为任意英文或者数字，这里填写为admin、<br>下面一个下拉选择框选择BLUE<br>按SystemId按钮，可能需要按两下，知道SystemId输入框出现一连串的“莫名其妙”的符号。<br>这个时候再按Active按钮，此时最下面的TextView就会出现这么一坨东西，代表基本成功<br><img src="http://img.blog.csdn.net/20170907162902448?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>这个时候，还需要点击Tools，选择tools里的save propertity<br><img src="http://img.blog.csdn.net/20170907163006825?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>PS：附上操作顺序图<br><img src="http://img.blog.csdn.net/20170907123217745?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>然后打开MyEclipse敬请享用吧。</p>
<p>如果有问题欢迎回复。我在线都会答。</p>
<h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><h3 id="2017年9月8日更新："><a href="#2017年9月8日更新：" class="headerlink" title="2017年9月8日更新："></a>2017年9月8日更新：</h3><p>如果出现了破解失败，即进去显示还有5天就到期。<br>请按照以下步骤执行：<br>1、首先卸载MyEclipse ，卸载完毕后请删除MyEclipse中的所有的文件。<br>2、按住Windows键+R，输入regedit，进去注册表编辑页面，按住Ctrl+F，出来搜索框，请输入：MyEclipse，然后回车，进行搜索，搜索出来了按del键进行删除。然后再按住F3继续搜索，直到搜索完毕。<br>3、重新按照如上步骤，重新破解安装。</p>
<h3 id="2017年12月30日更新："><a href="#2017年12月30日更新：" class="headerlink" title="2017年12月30日更新："></a>2017年12月30日更新：</h3><p>也没更新啥，就换了下排版嘻嘻嘻！</p>
<p>本文链接：<a href="http://blog.csdn.net/qq_32454537/article/details/77880294" target="_blank" rel="noopener">http://blog.csdn.net/qq_32454537/article/details/77880294</a></p>
]]></content>
      
        <categories>
            
            <category> Java学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio 优化2017年12月24日更新]]></title>
      <url>/2017/12/04/Android%20Studio%20%E4%BC%98%E5%8C%962017%E5%B9%B412%E6%9C%8824%E6%97%A5%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<blockquote>
<p><em>安装好Android Studio之后需要根据自己的习惯进行一些设置，下载些插件、设置下软件的相关属性等等。刚好重装了下系统，针对这个Android Studio进行了相关的设置，在这里将经历说一下，避免自己以后晚了相关设置也方便一些需要帮助的朋友</em>  </p>
</blockquote>
<p>更新记录：2017年12月24日22:32:37更新</p>
<p>本文主要分为设置篇和插件篇： </p>
<h1 id="技巧篇"><a href="#技巧篇" class="headerlink" title="技巧篇"></a>技巧篇</h1><p>##快速查找以及快捷键搜索<br>在AS的面板上双击<code>shift</code>键，即可调出全局搜索。<img src="http://img.blog.csdn.net/20171224213924058?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>AS有很多的快捷键，对于这些快捷键你不一定随时都能记得，这个时候可以使用<code>Win+Shift+A</code>键输入你想用的功能。后面会提示相关的快捷键的。<br><img src="http://img.blog.csdn.net/20171224214158337?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"> </p>
<h2 id="恢复默认布局"><a href="#恢复默认布局" class="headerlink" title="恢复默认布局"></a>恢复默认布局</h2><p>当你各种乱动默认的面板布局的时候，有的面板你想找的时候却发现找不到了，这个时候按住 <code>Shift+F12</code>就可以重置默认面板。<br><img src="http://img.blog.csdn.net/20171224214521926?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">  </p>
<h2 id="Tip-of-the-day"><a href="#Tip-of-the-day" class="headerlink" title="Tip of the day"></a>Tip of the day</h2><p>打开软件的时候随机显示关于Android Studio的相关使用提示。（很有用的，别关）</p>
<p><img src="http://img.blog.csdn.net/20171224215949578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="Android-Studio相关网站"><a href="#Android-Studio相关网站" class="headerlink" title="Android Studio相关网站"></a>Android Studio相关网站</h2><ul>
<li><a href="http://www.android-studio.org/" target="_blank" rel="noopener">Android Studio 中文社区</a> </li>
<li><a href="https://stackoverflow.com/" target="_blank" rel="noopener">优质的问答社区（英文的）</a> </li>
</ul>
<h1 id="设置篇"><a href="#设置篇" class="headerlink" title="设置篇"></a>设置篇</h1><blockquote>
<p>Android Studio到底是外国人开发的，这个东西拿到手感觉和我们日常使用的IDE有点···· </p>
</blockquote>
<h2 id="鼠标滚轮滑动调整字体大小"><a href="#鼠标滚轮滑动调整字体大小" class="headerlink" title="鼠标滚轮滑动调整字体大小"></a>鼠标滚轮滑动调整字体大小</h2><p>打开<code>File</code>里的<code>Setting</code> 勾选<code>Change font size(Zoom)with Ctrl——Mouse Wheel</code><br><img src="http://img.blog.csdn.net/20171224214754310?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">  </p>
<h2 id="查看参数定义"><a href="#查看参数定义" class="headerlink" title="查看参数定义"></a>查看参数定义</h2><p>使用快捷键<code>Ctrl+P</code>可以查看当前鼠标所在位置的方法的参数定义。<br><img src="http://img.blog.csdn.net/20171224222531022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"> </p>
<h2 id="鼠标移动显示API文档"><a href="#鼠标移动显示API文档" class="headerlink" title="鼠标移动显示API文档"></a>鼠标移动显示API文档</h2><p>设置当鼠标移动到方法上的时候显示API文档。<code>Editor-&gt;General-&gt;show quick document on mouse move</code>  后面那个Delay Time 是设置延时的，单位为毫秒。但是建议电脑性能差一点的不要开，会很卡。<br><img src="http://img.blog.csdn.net/20171224222926874?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="设置默认的字体大小"><a href="#设置默认的字体大小" class="headerlink" title="设置默认的字体大小"></a>设置默认的字体大小</h2><p>打开AS的时候发现蚊子一样大小的代码，密密麻麻的密集恐惧症受不了。<code>Editor-&gt;Colors&amp;Fonts-&gt;Font</code><br>一般设置到18就行了<br><img src="http://img.blog.csdn.net/20171224215037079?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">  </p>
<h2 id="更改快捷键"><a href="#更改快捷键" class="headerlink" title="更改快捷键"></a>更改快捷键</h2><p>设置<code>Keymap</code>，快捷键太多，可以使用搜索框搜索 </p>
<p><img src="http://img.blog.csdn.net/20171224220232053?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="设置代码提示"><a href="#设置代码提示" class="headerlink" title="设置代码提示"></a>设置代码提示</h2><h2 id="代码提示的时候匹配所有字符"><a href="#代码提示的时候匹配所有字符" class="headerlink" title="代码提示的时候匹配所有字符"></a>代码提示的时候匹配所有字符</h2><p>选择None就可以匹配到很多方法或者关键字，这个在你忘了这个方法怎么写的时候非常有用。<br><img src="http://img.blog.csdn.net/20171224220954002?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h1 id="插件篇"><a href="#插件篇" class="headerlink" title="插件篇"></a>插件篇</h1><h2 id="AndroidAccessors"><a href="#AndroidAccessors" class="headerlink" title="AndroidAccessors"></a>AndroidAccessors</h2><p>快速生成<code>get</code>和<code>set</code>系列方法。这个在你定义<code>JavaBean</code>的时候非常有用。<br><img src="http://img.blog.csdn.net/20171224221252982?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">  </p>
<h2 id="ButterKnifeZelezny-插件"><a href="#ButterKnifeZelezny-插件" class="headerlink" title="ButterKnifeZelezny 插件"></a>ButterKnifeZelezny 插件</h2><p>如果你厌倦了findViewById这样的写法，那么这个插件是你的选择。这个配合ButterKnife使用的。</p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>这里我推荐一个<code>MaterialDesign AS UI Theme</code> 这个主题比较好用，尤其是配合黑色的AS主题的时候。</p>
<p>顺便推荐一个<a href="http://color-themes.com/" target="_blank" rel="noopener">http://color-themes.com/</a> 这个网站下载你喜欢的主题，然后导入主题即可。<br><img src="http://img.blog.csdn.net/20171224222110962?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzI0NTQ1Mzc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>插件及常用的快捷键请看我之前的博客：<a href="http://blog.csdn.net/qq_32454537/article/details/77870200" target="_blank" rel="noopener">http://blog.csdn.net/qq_32454537/article/details/77870200</a></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Android Studio </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
